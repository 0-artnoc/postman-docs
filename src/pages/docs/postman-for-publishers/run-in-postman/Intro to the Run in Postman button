---
title: "Introduction to the Run in Postman button"
order: 331
page_id: "creating_run_button"
---

The Run in Postman button is a way to give developers working with your APIs direct access to your endpoints. When you [create a button](/docs/postman-for-publishers/run-in-postman/creating-run-button/) for your collections and then embed that button in your API documentation, webiste, or GitHub repo, your collections will open in the Postman app whenever a user clicks the button.

![Travefy](https://postman-static-assets.s3.amazonaws.com/postman-docs/RIP+intro_travefy+button.jpg)

> The Run in Postman button works with all description formats like Swagger, RAML, and GitHub.

## The 2 types of Run in Postman buttons

**Dynamic**: Uses HTML and CSS. Optimal for a website where you have permission to edit the site's source code. Gives you access to the [Run in Postman API](/docs/postman-for-publishers/run-in-postman/run-button-API/).

**Static**: Uses Markdown. Optimal for a Markdown document like a GitHub ReadMe or BitBucket repository.

##Include an environment

You can [include and environment](/docs/postman-for-publishers/run-in-postman/environments-run-button/) with either type of button. The environment will open in the Postman app along with your collections whenever a user clicks your button. The user can then input their own [variable values in the environment](/docs/postman/variables-and-environments/variables/).

## Use dynamic button to access the Run in Postman API

The JavaScript [Run in Postman API](/docs/postman-for-publishers/run-in-postman/run-button-API/) is accessible through the dynamic Run in Postman button. The API uses the `pm()`method, which you can leverage to create and modify ennvironments included in your button. You can also include mulitple buttons on a single page with segregated environements, each with its own button.

The API consisits of 3 JavaScript functions that can alter your button's behavior:

* `env.create`: Creates a new environment.
* `env.assign`: Edits an existing environment.
* `env.replace`: Replaces and entire environment.

## When developers interact with your button

Develpers will find the Run in Postman button displayed in your API documentation or GitHub.

 [![example run in postman](https://assets.postman.com/postman-docs/59131401.png)](https://assets.postman.com/postman-docs/59131401.png)

When they click button, they'll be prompted to open the collection in the the Postman app. If they haven't downloaded the app yet, they'll be able to do so then. The collection will import directly into their app and bring the app into focus.

 [![import options](https://postman-static-assets.s3.amazonaws.com/postman-docs/RIP+intro_travefy+button.jpg)

> The options will display in a modal if you implemented the button using JavaScript, or a new page if you implemented the button using a static image.

## Security considerations

* Only the Postman user who generates the Run in Postman embed code from their collection will be able to modify the original collection.
* Users who import the collection are generating a copy of the collection in their own apps.
* The only data that is shared with the link is what you enter in Postman. For example, the names and descriptions of the collections, folders, and requests, and the request data (URL, headers, body, tests, scripts, etc.).
* Make sure you test importing your collection to ensure you have not included any sensitive data such as access keys that users will potentially import when they use the Run in Postman button. You can create a duplicate of your collection and remove any data you do not want to share.

This page only covers security details related to the Run in Postman feature. Refer to our [complete security practices](https://www.postman.com/security) for general details.


## Next steps

Create a [Run in Postman button](/docs/postman-for-publishers/run-in-postman/creating-run-button/)
